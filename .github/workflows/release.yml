name: Release Charts

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  release:
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      contents: write
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.12.1

      - name: Add dependency chart repos
        run: |
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo add jetstack https://charts.jetstack.io
          helm repo update

      - name: Update chart dependencies
        run: |
          make deps

      - name: Lint charts
        run: |
          make lint

      - name: Package charts
        run: |
          make package

      - name: Generate index
        run: |
          make index

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Optional: Create GitHub release with chart packages
  create-release:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.12.1

      - name: Add dependency chart repos
        run: |
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo add jetstack https://charts.jetstack.io
          helm repo update

      - name: Package charts
        run: |
          make package

      - name: Get chart versions
        id: chart_versions
        run: |
          echo "## Chart Releases" > release_body.md
          echo "" >> release_body.md

          # Get all chart versions and create release body
          for chart_dir in charts/*/; do
            if [ -f "$chart_dir/Chart.yaml" ]; then
              chart_name=$(basename "$chart_dir")
              version=$(grep '^version:' "$chart_dir/Chart.yaml" | awk '{print $2}')
              description=$(grep '^description:' "$chart_dir/Chart.yaml" | sed 's/description: //')

              echo "### $chart_name v$version" >> release_body.md
              echo "" >> release_body.md
              echo "$description" >> release_body.md
              echo "" >> release_body.md
            fi
          done

          echo "" >> release_body.md
          echo "## Installation" >> release_body.md
          echo "" >> release_body.md
          echo '```bash' >> release_body.md
          echo "helm repo add ankra https://charts.ankra.io" >> release_body.md
          echo "helm repo update" >> release_body.md
          echo "" >> release_body.md
          echo "# Install charts:" >> release_body.md
          for chart_dir in charts/*/; do
            if [ -f "$chart_dir/Chart.yaml" ]; then
              chart_name=$(basename "$chart_dir")
              echo "helm install my-$chart_name ankra/$chart_name" >> release_body.md
            fi
          done
          echo '```' >> release_body.md

          # Use current date as version for multi-chart releases
          release_version=$(date '+%Y.%m.%d-%H%M')
          echo "release_version=$release_version" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ steps.chart_versions.outputs.release_version }}
          release_name: Charts Release ${{ steps.chart_versions.outputs.release_version }}
          body_path: release_body.md
          draft: false
          prerelease: false

      - name: Upload Release Assets
        run: |
          # Upload all packaged charts
          for package in ./packages/*.tgz; do
            if [ -f "$package" ]; then
              echo "Uploading $package..."
              curl \
                -X POST \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Content-Type: application/gzip" \
                --data-binary @"$package" \
                "${{ steps.create_release.outputs.upload_url }}?name=$(basename $package)&label=$(basename $package)"
            fi
          done